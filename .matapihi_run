#!/bin/bash

m_start="~/.matapihi_start"
m_exit="~/.matapihi_exit"

get_scripts (in_out, output) {
    echo "If your seeing this it's either the first time you've connected to Matapihi"
    echo "or your $output script has failed, you can try to set up a new script."
    echo "A blank entry will set the script to call bash"
    echo "The following will ovewrite any $output script"
    echo "('ctrl-c' to cancel, '. ~/.xinit_prompt' to restart)"
    echo "Enter the script url (for wget) you want to run when $in_out Matapihi: "
    read script_url
    if test -z "$script_url"
    then
        echo "#!/bin/bash \n\nbash" > "$output"
        chmod +x "$output"
    else
        wget -O "$output" "$script_url"
        echo "You should check the script is as you expect before you run it, opening 'less'"
        less "$ouptut"
        echo "Are you happy for this script to execute? (d to destroy it, anything else to continue)"
        read destroy
        if [[ "$destroy" == "d" ]]
        then
            rm "$output"
        else
           chmod +x "$output"
        fi
    fi
}


check_files () {
    if [[ ! -f "$m_start" ]]
    then
        get_scripts("an initial client connects to", "$m_start")
    fi

    if [[ ! -f "$m_exit" ]]
    then
        get_scripts("the final client disconnects from", "$m_exit")
        echo "You may like to call $m_exit to test the disconnect script,"
        echo "Note: doing so will likely destroy the session"
    fi
}


while [[ ! -f "$m_start" && ! -f "$m_exit" ]]; do
    check_files()
done

"$(m_start)" \
    || echo "Start script failed, try editing $m_start" \
        && echo "or removing it and retrying it by calling ~/.matapihi_run" \
        && exit(1)

